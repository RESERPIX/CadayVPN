{"ast":null,"code":"var _jsxFileName = \"/home/reserpix/Documents/important/vpn-key-seller/src/components/Payment.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const location = useLocation();\n  const {\n    tariffName,\n    tariffPrice\n  } = location.state || {\n    tariffName: '',\n    tariffPrice: 0\n  };\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handlePayment = async () => {\n    if (!cardNumber || !expiryDate || !cvv) {\n      setError('Пожалуйста, заполните все поля.');\n      return;\n    }\n    const isCardValid = validateCard(cardNumber);\n    if (!isCardValid) {\n      setError('Некорректный номер карты.');\n      return;\n    }\n\n    // Генерация случайного userId от 1 до 5\n    const randomUserId = Math.floor(Math.random() * 5) + 1;\n    try {\n      // Получаем VPN-ключ после успешной оплаты\n      const response = await fetch(`http://localhost:5000/purchase-key`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: randomUserId\n        }) // Используем случайный userId\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Перенаправляем на страницу подтверждения, передавая VPN-ключ\n        navigate('/confirmation', {\n          state: {\n            tariffName,\n            tariffPrice,\n            vpnKey: data.vpnKey\n          }\n        });\n      } else {\n        setError(data.message || 'Не удалось получить VPN-ключ.');\n      }\n    } catch (err) {\n      console.error('Ошибка при получении ключа:', err);\n      setError('Ошибка сервера. Пожалуйста, попробуйте позже.');\n    }\n  };\n  const validateCard = number => {\n    return /^\\d{16}$/.test(number); // Простая проверка на 16 цифр\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl font-bold mb-4\",\n      children: [\"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \\u0442\\u0430\\u0440\\u0438\\u0444\\u0430: \", tariffName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl mb-4\",\n      children: [\"\\u0426\\u0435\\u043D\\u0430: \", tariffPrice, \" \\u20BD \\u0432 \\u043C\\u0435\\u0441\\u044F\\u0446\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B\",\n      value: cardNumber,\n      onChange: e => setCardNumber(e.target.value),\n      className: \"p-2 border border-gray-300 rounded mb-4 w-80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0421\\u0440\\u043E\\u043A \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F (MM/YY)\",\n      value: expiryDate,\n      onChange: e => setExpiryDate(e.target.value),\n      className: \"p-2 border border-gray-300 rounded mb-4 w-80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"CVV\",\n      value: cvv,\n      onChange: e => setCvv(e.target.value),\n      className: \"p-2 border border-gray-300 rounded mb-4 w-80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\",\n      children: \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"c8UXOQOD0ozXXlHzurc+08gMg/E=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Payment","_s","location","tariffName","tariffPrice","state","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvv","setCvv","error","setError","navigate","handlePayment","isCardValid","validateCard","randomUserId","Math","floor","random","response","fetch","method","headers","body","JSON","stringify","userId","data","json","ok","vpnKey","message","err","console","number","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/reserpix/Documents/important/vpn-key-seller/src/components/Payment.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Payment: React.FC = () => {\n  const location = useLocation();\n  const { tariffName, tariffPrice } = location.state || { tariffName: '', tariffPrice: 0 };\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handlePayment = async () => {\n    if (!cardNumber || !expiryDate || !cvv) {\n      setError('Пожалуйста, заполните все поля.');\n      return;\n    }\n\n    const isCardValid = validateCard(cardNumber);\n    if (!isCardValid) {\n      setError('Некорректный номер карты.');\n      return;\n    }\n\n    // Генерация случайного userId от 1 до 5\n    const randomUserId = Math.floor(Math.random() * 5) + 1;\n\n    try {\n      // Получаем VPN-ключ после успешной оплаты\n      const response = await fetch(`http://localhost:5000/purchase-key`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ userId: randomUserId }), // Используем случайный userId\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // Перенаправляем на страницу подтверждения, передавая VPN-ключ\n        navigate('/confirmation', { state: { tariffName, tariffPrice, vpnKey: data.vpnKey } });\n      } else {\n        setError(data.message || 'Не удалось получить VPN-ключ.');\n      }\n    } catch (err) {\n      console.error('Ошибка при получении ключа:', err);\n      setError('Ошибка сервера. Пожалуйста, попробуйте позже.');\n    }\n  };\n\n  const validateCard = (number: string): boolean => {\n    return /^\\d{16}$/.test(number); // Простая проверка на 16 цифр\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100 p-4\">\n      <h1 className=\"text-5xl font-bold mb-4\">Оплата тарифа: {tariffName}</h1>\n      <p className=\"text-xl mb-4\">Цена: {tariffPrice} ₽ в месяц</p>\n\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n\n      <input\n        type=\"text\"\n        placeholder=\"Номер карты\"\n        value={cardNumber}\n        onChange={(e) => setCardNumber(e.target.value)}\n        className=\"p-2 border border-gray-300 rounded mb-4 w-80\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Срок действия (MM/YY)\"\n        value={expiryDate}\n        onChange={(e) => setExpiryDate(e.target.value)}\n        className=\"p-2 border border-gray-300 rounded mb-4 w-80\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"CVV\"\n        value={cvv}\n        onChange={(e) => setCvv(e.target.value)}\n        className=\"p-2 border border-gray-300 rounded mb-4 w-80\"\n      />\n\n      <button\n        onClick={handlePayment}\n        className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n      >\n        Оплатить\n      </button>\n    </div>\n  );\n};\n\nexport default Payment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}